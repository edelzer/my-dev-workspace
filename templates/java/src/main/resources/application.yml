# Spring Boot Professional Template - Main Configuration
# Security-first configuration with comprehensive monitoring and enterprise features

spring:
  application:
    name: spring-boot-professional-template
    
  # Profile configuration
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:development}
    
  # Database configuration
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/springapp}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    
    # HikariCP connection pool configuration
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:20}
      minimum-idle: ${DB_POOL_MIN_IDLE:5}
      idle-timeout: 300000
      max-lifetime: 600000
      connection-timeout: 30000
      leak-detection-threshold: 60000
      
  # JPA/Hibernate configuration
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        show_sql: false
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
    open-in-view: false
    
  # Redis configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          
  # Cache configuration
  cache:
    type: redis
    redis:
      time-to-live: 3600000 # 1 hour
      cache-null-values: false
      
  # Security configuration
  security:
    require-ssl: ${REQUIRE_SSL:false}
    
  # Web configuration
  web:
    resources:
      cache:
        cachecontrol:
          max-age: 31536000 # 1 year for static resources
          cache-public: true
          
  # JSON configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
      accept-single-value-as-array: true
    time-zone: UTC
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSSZ
    
  # Flyway migration configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    clean-disabled: true
    
  # Task execution configuration
  task:
    execution:
      pool:
        core-size: 8
        max-size: 16
        queue-capacity: 1000
        keep-alive: 60s
      thread-name-prefix: async-task-
      
  # Task scheduling configuration
  task:
    scheduling:
      pool:
        size: 4
      thread-name-prefix: scheduled-task-

# Server configuration
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${SERVER_CONTEXT_PATH:}
    session:
      timeout: 30m
      cookie:
        http-only: true
        secure: ${COOKIE_SECURE:false}
        same-site: strict
        name: JSESSIONID
        
  # Security headers
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false
    
  # Compression
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
    
  # HTTP/2 and SSL
  http2:
    enabled: ${HTTP2_ENABLED:true}
  ssl:
    enabled: ${SSL_ENABLED:false}
    key-store: ${SSL_KEYSTORE:}
    key-store-password: ${SSL_KEYSTORE_PASSWORD:}
    key-store-type: ${SSL_KEYSTORE_TYPE:PKCS12}

# Management endpoints (Actuator)
management:
  server:
    port: ${MANAGEMENT_PORT:8081}
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers
      base-path: /actuator
    enabled-by-default: false
  endpoint:
    health:
      enabled: true
      show-details: when-authorized
      show-components: when-authorized
      roles: ADMIN
    info:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
    loggers:
      enabled: true
  health:
    redis:
      enabled: true
    db:
      enabled: true
    diskspace:
      enabled: true
      threshold: 10MB
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99
      slo:
        http.server.requests: 10ms, 50ms, 100ms, 200ms, 500ms
  info:
    build:
      enabled: true
    git:
      enabled: true
      mode: full
    java:
      enabled: true
    os:
      enabled: true

# Logging configuration
logging:
  level:
    com.company.project: ${LOG_LEVEL:INFO}
    org.springframework.security: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.flywaydb: INFO
    redis.clients.jedis: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:logs/application.log}
    max-size: 10MB
    max-history: 30
    total-size-cap: 1GB

# Application-specific configuration
app:
  # JWT configuration
  jwt:
    secret: ${JWT_SECRET:bXlTZWNyZXRLZXlGb3JKV1RUb2tlblNpZ25pbmdXaXRoU3ByaW5nQm9vdFByb2Zlc3Npb25hbFRlbXBsYXRl}
    expiration-ms: ${JWT_EXPIRATION_MS:3600000} # 1 hour
    refresh-expiration-ms: ${JWT_REFRESH_EXPIRATION_MS:86400000} # 24 hours
    
  # CORS configuration
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
    allowed-methods: GET,POST,PUT,PATCH,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600
    
  # Security configuration
  security:
    password-strength:
      min-length: 8
      require-uppercase: true
      require-lowercase: true
      require-digit: true
      require-special-char: true
    account-lockout:
      max-attempts: 5
      lockout-duration: 30m
    session:
      timeout: 30m
      max-concurrent-sessions: 1
      
  # Rate limiting configuration
  rate-limit:
    default:
      requests: 100
      window: 1m
    auth:
      requests: 10
      window: 1m
    api:
      requests: 1000
      window: 1h
      
  # File upload configuration
  upload:
    max-file-size: 10MB
    max-request-size: 50MB
    allowed-extensions: jpg,jpeg,png,gif,pdf,doc,docx
    storage-path: ${UPLOAD_STORAGE_PATH:uploads/}
    
  # Email configuration
  email:
    enabled: ${EMAIL_ENABLED:false}
    from: ${EMAIL_FROM:noreply@company.com}
    smtp:
      host: ${SMTP_HOST:localhost}
      port: ${SMTP_PORT:587}
      username: ${SMTP_USERNAME:}
      password: ${SMTP_PASSWORD:}
      auth: true
      starttls: true
      
  # Feature flags
  features:
    registration-enabled: ${REGISTRATION_ENABLED:true}
    email-verification-required: ${EMAIL_VERIFICATION_REQUIRED:true}
    password-reset-enabled: ${PASSWORD_RESET_ENABLED:true}
    remember-me-enabled: ${REMEMBER_ME_ENABLED:true}
    
  # API configuration
  api:
    version: v1
    title: Spring Boot Professional Template API
    description: Professional Spring Boot API with security-first architecture
    contact:
      name: API Support
      email: api-support@company.com
      url: https://company.com/support
    license:
      name: MIT License
      url: https://opensource.org/licenses/MIT

# OpenAPI/Swagger configuration
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    display-request-duration: true
    groups-order: DESC
    tags-sorter: alpha
    operations-sorter: method
  show-actuator: false
  default-consumes-media-type: application/json
  default-produces-media-type: application/json