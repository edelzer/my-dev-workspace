# Docker Ignore for Node.js API Template
# Prevents unnecessary files from being sent to Docker build context

# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json  # Regenerate in container
yarn.lock         # Regenerate in container

# Build outputs
dist/
build/
out/

# Testing
coverage/
.nyc_output/
*.test.js
*.spec.js
*.test.ts
*.spec.ts
tests/
__tests__/
test/

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
*.sublime-project
*.sublime-workspace

# Git
.git/
.gitignore
.gitattributes
.github/

# CI/CD
.circleci/
.travis.yml
.gitlab-ci.yml
azure-pipelines.yml
Jenkinsfile

# Environment files (NEVER include secrets in images)
.env
.env.local
.env.development
.env.test
.env.production
.env.*.local

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Documentation (keep README.md)
*.md
!README.md
docs/
documentation/

# Temporary files
tmp/
temp/
.tmp/
*.tmp
*.bak
*.swp

# OS files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Development tools
.eslintcache
.stylelintcache
.prettierignore

# Docker files themselves (don't include in context recursively)
Dockerfile*
docker-compose*.yml
.dockerignore

# Workspace-specific
.bmad-workspace/
.claude/
memories/

# TypeScript
*.tsbuildinfo

# Misc
.cache/
.parcel-cache/
*.local
