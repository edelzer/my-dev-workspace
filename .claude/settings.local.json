{
  "permissions": {
    "allow": [
      "mcp__filesystem__list_directory",
      "mcp__filesystem__read_file",
      "mcp__filesystem__write_file",
      "mcp__github__get_repository",
      "Bash(claude mcp:*)",
      "Bash(export PATH=\"$HOME/.local/bin:$PATH\")",
      "Bash(uv:*)",
      "WebFetch(domain:github.com)",
      "Bash(git clone:*)",
      "Bash(claude --version)",
      "Bash(npm search:*)",
      "Bash(npx bmad-method install:*)",
      "Bash(npx bmad-method:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "mcp__filesystem__create_directory",
      "Bash(node:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(python:*)",
      "mcp__filesystem__read_multiple_files",
      "WebFetch(domain:docs.anthropic.com)",
      "mcp__memory__read_graph",
      "mcp__memory__create_entities",
      "mcp__memory__create_relations",
      "WebFetch(domain:modelcontextprotocol.io)",
      "mcp__memory__add_observations",
      "mcp__filesystem__edit_file",
      "mcp__filesystem__move_file",
      "Bash(rm:*)",
      "Bash(del \"C:\\Users\\edelz\\OneDrive\\Documents\\GitHub\\development\\my-dev-workspace\\.claude\\intelligent-hooks.json\")",
      "Bash(git log:*)",
      "Bash(bash:*)",
      "Bash(dir:*)",
      "Bash(test:*)",
      "Bash(npm run:*)",
      "Bash(find:*)",
      "WebFetch(domain:docs.spring.io)",
      "WebFetch(domain:spotbugs.github.io)"
    ],
    "deny": []
  },
  "mcpServers": {
    "BMAD-METHOD.git Docs": {
      "url": "https://gitmcp.io/bmadcode/BMAD-METHOD.git"
    },
    "puppeteer-browser": {
      "command": "mcp-server-puppeteer",
      "args": []
    },
    "json-mode-optimizer": {
      "command": "node",
      "args": [
        "./mcp-servers/json-mode-optimizer/dist/index.js"
      ],
      "description": "AI JSON mode configuration and optimization system"
    },
    "xml-tag-structuring": {
      "command": "node",
      "args": [
        "./mcp-servers/xml-tag-structuring/dist/index.js"
      ],
      "description": "Advanced XML-based prompt engineering and structure optimization"
    }
  },
  "toolPermissions": {
    "create_json_config": {
      "server": "json-mode-optimizer",
      "allowed": true
    },
    "optimize_json_output": {
      "server": "json-mode-optimizer",
      "allowed": true
    },
    "validate_json_structure": {
      "server": "json-mode-optimizer",
      "allowed": true
    },
    "create_workflow_integration": {
      "server": "json-mode-optimizer",
      "allowed": true
    },
    "analyze_output_consistency": {
      "server": "json-mode-optimizer",
      "allowed": true
    },
    "get_optimization_analytics": {
      "server": "json-mode-optimizer",
      "allowed": true
    },
    "auto_improve_schema": {
      "server": "json-mode-optimizer",
      "allowed": true
    },
    "create_xml_template": {
      "server": "xml-tag-structuring",
      "allowed": true
    },
    "generate_xml_prompt": {
      "server": "xml-tag-structuring",
      "allowed": true
    },
    "validate_xml_structure": {
      "server": "xml-tag-structuring",
      "allowed": true
    },
    "create_workflow_pattern": {
      "server": "xml-tag-structuring",
      "allowed": true
    },
    "optimize_xml_performance": {
      "server": "xml-tag-structuring",
      "allowed": true
    },
    "analyze_effectiveness": {
      "server": "xml-tag-structuring",
      "allowed": true
    },
    "create_template_library": {
      "server": "xml-tag-structuring",
      "allowed": true
    },
    "get_xml_analytics": {
      "server": "xml-tag-structuring",
      "allowed": true
    }
  }
}